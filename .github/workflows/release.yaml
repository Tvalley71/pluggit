name: Release Workflow

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number to release or simulate (e.g. 0.4.11)'
        required: true
        default: '0.0.0'

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    steps:
      - name: ðŸ§  Define variables
        run: |
          if [ "${{ github.event_name }}" = "release" ]; then
            echo "version=${{ github.event.release.tag_name }}" >> $GITHUB_ENV
            echo "target_branch=main" >> $GITHUB_ENV
          else
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_ENV
            echo "target_branch=test" >> $GITHUB_ENV
          fi

      - name: ðŸ“¥ Checkout the repository
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          ref: ${{ env.target_branch }}

      - name: ðŸ”¢ Set version number
        run: |
          echo "Using version: $version"
          jq --arg version "$version" '.version = $version' \
            "${{ github.workspace }}/custom_components/pluggit/manifest.json" > tmp \
            && mv -f tmp "${{ github.workspace }}/custom_components/pluggit/manifest.json"

      - name: âœ… Validate manifest version
        run: |
          manifestversion=$(jq -r '.version' ${{ github.workspace }}/custom_components/pluggit/manifest.json)
          if [ "$manifestversion" != "$version" ]; then
            echo "Manifest version ($manifestversion) does not match expected version ($version)"
            exit 1
          fi

      - name: ðŸŒ¿ Set Dantherm branch
        run: echo "dantherm_branch=main" >> $GITHUB_ENV

      - name: ðŸ“¥ Checkout Dantherm repository
        run: |
          git clone --branch ${{ env.dantherm_branch }} https://github.com/Tvalley71/dantherm.git dantherm

      - name: ðŸ“‹ Copy shared code files
        run: |
          rsync -av --exclude 'const.py' --exclude 'manifest.json' \
            dantherm/custom_components/dantherm/ \
            "${{ github.workspace }}/custom_components/pluggit/"

      - name: ðŸ”§ Replace integration name
        run: |
          sed -i 's/integration: dantherm/integration: pluggit/g' custom_components/pluggit/services.yaml || echo "No replacement needed"

      - name: ðŸ“¦ Create zip file
        run: |
          cd "${{ github.workspace }}/custom_components/pluggit"
          zip pluggit.zip -r ./

      - name: ðŸ“¤ Upload release asset (only for real releases)
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: "${{ github.workspace }}/custom_components/pluggit/pluggit.zip"
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: âœ… Commit and push (if changes)
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add custom_components/pluggit/
          if ! git diff --cached --quiet; then
            git commit -m "ðŸ”„ Update Pluggit integration to version $version"
            git push origin ${{ env.target_branch }}
          else
            echo "No changes to commit or push"
