name: Release Workflow

on:
  release:
    types: [published]

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ“¥ Checkout the repository
        uses: actions/checkout@v2

      - name: ðŸ”¢ Set version number from GitHub release tag
        run: |
          VERSION="${{ github.event.release.tag_name }}"
          jq --arg version "$VERSION" '.version = $version' \
            "${{ github.workspace }}/custom_components/pluggit/manifest.json" > tmp \
            && mv -f tmp "${{ github.workspace }}/custom_components/pluggit/manifest.json"

      - name: ðŸ‘€ Validate that manifest version is correct
        run: |
          manifestversion=$(jq -r '.version' ${{ github.workspace }}/custom_components/pluggit/manifest.json)
          if [ "$manifestversion" != "${{ github.event.release.tag_name }}" ]; then
            echo "The version in manifest.json does not match the release tag"
            echo "Manifest version: $manifestversion"
            echo "Release tag: ${{ github.event.release.tag_name }}"
            exit 1
          fi

      - name: Set the Dantherm branch
        id: set-dantherm-branch
        run: |
          if [ "${{ github.event.release.prerelease }}" = "true" ]; then
            echo "Using dev branch for pre-release"
            echo "dantherm_branch=dev" >> $GITHUB_ENV
          else
            echo "Using main branch"
            echo "dantherm_branch=main" >> $GITHUB_ENV
          fi

      - name: Checkout Dantherm repository
        run: |
          git clone --branch ${{ env.dantherm_branch }} https://github.com/Tvalley71/dantherm.git dantherm

      - name: Copy shared code files from the Dantherm integration
        run: |
          rsync -av --exclude 'const.py' --exclude 'manifest.json' \
            dantherm/custom_components/dantherm/ \
            "${{ github.workspace }}/custom_components/pluggit/"

      - name: ðŸ”„ Replace integration name in services.yaml
        run: |
          sed -i 's/integration: dantherm/integration: pluggit/g' custom_components/pluggit/services.yaml

      - name: ðŸ“¦ Create zip file for the integration
        run: |
          cd "${{ github.workspace }}/custom_components/pluggit"
          zip pluggit.zip -r ./

      - name: ðŸ“¤ Upload the zip file as a release asset
        uses: softprops/action-gh-release@v1
        with:
          files: "${{ github.workspace }}/custom_components/pluggit/pluggit.zip"
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
