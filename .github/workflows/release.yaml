name: Release Workflow

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number to release or simulate (e.g. 0.4.11)'
        required: true
        default: '0.0.0'

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    steps:
      - name: 🧠 Define variables
        run: |
          if [ "${{ github.event_name }}" = "release" ]; then
            echo "version=${{ github.event.release.tag_name }}" >> $GITHUB_ENV
            echo "target_branch=main" >> $GITHUB_ENV
          else
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_ENV
            echo "target_branch=test" >> $GITHUB_ENV
          fi

      - name: 📥 Checkout the repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          ref: ${{ env.target_branch }}

      - name: 🔢 Set version number in manifest
        run: |
          echo "Using version: $version"
          jq --arg version "$version" '.version = $version' \
            "custom_components/pluggit/manifest.json" > tmp \
            && mv -f tmp "custom_components/pluggit/manifest.json"

      - name: ✅ Validate manifest version
        run: |
          manifestversion=$(jq -r '.version' custom_components/pluggit/manifest.json)
          if [ "$manifestversion" != "$version" ]; then
            echo "Manifest version ($manifestversion) does not match expected version ($version)"
            exit 1
          fi

      - name: 🌿 Set Dantherm branch
        run: echo "dantherm_branch=main" >> $GITHUB_ENV

      - name: 📥 Checkout Dantherm repository
        run: |
          git clone --branch ${{ env.dantherm_branch }} https://github.com/Tvalley71/dantherm.git dantherm

      - name: 📋 Copy shared code files
        run: |
          rsync -av --exclude 'const.py' --exclude 'manifest.json' \
            dantherm/custom_components/dantherm/ \
            "custom_components/pluggit/"

      - name: 🔧 Replace integration name
        run: |
          sed -i 's/integration: dantherm/integration: pluggit/g' custom_components/pluggit/services.yaml || echo "No replacement needed"

      - name: 📝 Replace translation branding
        run: |
          for file in custom_components/pluggit/translations/*.json; do
            sed -i \
              -e 's/DANTHERM/PLUGGIT/g' \
              -e 's/Dantherm/Pluggit/g' \
              -e 's/dantherm/pluggit/g' "$file"
          done

      - name: 📝 Sync README shared sections from Dantherm
        run: python3 sync_readme_md.py

      - name: ✅ Commit and push README if changed
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          if git diff --quiet README.md; then
            echo "No README.md changes to commit."
          else
            git add README.md
            git commit -m "🔄 Update shared README sections from Dantherm"
            git push origin ${{ env.target_branch }}
          fi

      - name: 📦 Create zip file
        run: |
          cd custom_components/pluggit
          zip pluggit.zip -r ./

      - name: 📤 Upload release asset (only for real releases)
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: "custom_components/pluggit/pluggit.zip"
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
